@model DESDrawing.Models.Load
@{
    ViewBag.Title = "AddLoad";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-wrapper">
    <div class="row page-titles">
        <div class="col-md-12 align-self-center">
            <h3 class="text-themecolor font-20 clearfix">Add Load</h3>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @{
                string Code = (string)TempData["code"];
                string msg = (string)TempData["Msg"];
                if (!string.IsNullOrEmpty(Code))
                {
                    if (Code == "1")
                    {
                        <div class="alert alert-success msgdiv">
                            <strong>Success!</strong> @msg
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-danger msgdiv">
                            <strong>Error!</strong> @msg
                        </div>
                    }
                }
            }
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12">
                <div class="card card-outline-info">
                    <div class="card-header">
                        <h4 class="m-b-0 text-white">
                            Load
                        </h4>
                    </div>
                    <div class="card-body">
                        <form action="/Master/AddLoad" method="post" id="LoadFormSubmit" onsubmit="return validate();">
                            <div class="form-body">

                                <div class="row p-t-20">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @*<label class="control-label">
                                                Select Role<span class="text-danger">*</span>
                                            </label>*@
                                            @Html.DropDownListFor(model => model.FK_RoleId, new SelectList(ViewBag.role, "Value", "Text"), "-Select Role-", new { @class = "form-control" })
                                            @Html.HiddenFor(model => model.ID)
                                            @Html.HiddenFor(model => model.FK_RoleId)
                                            @Html.ValidationMessageFor(m => m.FK_RoleId, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-4">
                                        <div class="form-group input-group">
                                            @*<label class="control-label">
                                                Enter Load From<span class="text-danger">*</span>
                                            </label>*@
                                            @Html.TextBoxFor(M => M.LoadFrom, new { @class = "form-control", @placeholder = "Enter Load From", @onkeypress = "return onlyNos(event,this)" })
                                            @Html.ValidationMessageFor(m => m.LoadFrom, "", new { @class = "text-danger" })
                                            <div class="input-group-append">
                                                <span class="input-group-text" id="basic-addon2">KV</span>
                                            </div>

                                        </div>
                                    </div>
                                    <!--/span-->
                                    <div class="col-md-4">
                                        <div class="form-group input-group">
                                            @*<label class="control-label">
                                                Enter Load To<span class="text-danger">*</span>
                                            </label>*@
                                            @Html.TextBoxFor(M => M.Loadto, new { @class = "form-control", @placeholder = "Enter Load To", @onkeypress = "return onlyNos(event,this)" })
                                            @Html.ValidationMessageFor(m => m.Loadto, "", new { @class = "text-danger" })
                                            <div class="input-group-append">
                                                <span class="input-group-text" id="basic-addon2">KV</span>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-actions">
                                @if (Model.ID > 0)
                                {
                                    <button class="btn btn-success hstheme-button-o text-white">
                                        <i class="fa fa-check"></i>
                                        Update
                                    </button>
                                }
                                else
                                {
                                    <button class="btn btn-success hstheme-button-o text-white">
                                        <i class="fa fa-check"></i>
                                        Submit
                                    </button>
                                }

                                <a href="/Master/LoadList" class="btn btn-danger hstheme-button-o text-white">
                                    <i class="fa fa-crosshairs"></i>
                                    Cancel
                                </a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

        </div>


        <footer class="footer"> Developed by Uttar Pradesh Vidhut Suraksha </footer>

    </div>
</div>
<script>
    function onlyNos(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
        catch (err) {
            alert(err.Description);
        }

    }

    function validate() {
        debugger;
        if ($('#FK_RoleId').val() == '' || $('#FK_RoleId').val() == '0') {
            swal("", "Please select Role..", "warning");
            $('#FK_RoleId').focus();
            return false;

        }
        if ($('#LoadFrom').val() == '' || $('#LoadFrom').val() == null) {
            swal("", "Please Enter Load From..", "warning");
            $('#LoadFrom').focus();
            return false;
        }
        if ($('#Loadto').val() == '' || $('#Loadto').val() == null) {
            swal("", "Please Enter Load To..", "warning");
            $('#Loadto').focus();
            return false;
        }
        else
        {
            return true;
            $("#LoadFormSubmit").submit();
        }
    }
</script>

