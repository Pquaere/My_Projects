@model HRPayroll.Models.Product
@{
    ViewBag.Title = "ProductMaster";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<div class="page-wrapper">
    <div class="row page-titles">
        <div class="col-md-12 align-self-center">
            <h3 class="text-themecolor font-20 clearfix">Add Product</h3>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @{
                string Code = (string)TempData["code"];
                string msg = (string)TempData["Msg"];
                if (!string.IsNullOrEmpty(Code))
                {
                    if (Code == "1")
                    {
                        <div class="alert alert-success msgdiv">
                            <strong>Success!</strong> @msg
                        </div>
                        <script type="text/javascript">
                            window.setTimeout(function () {
                                location.href = '/Master/ProductList';
                            }, 4000);
                        </script>
                    }
                    else
                    {
                        <div class="alert alert-danger msgdiv">
                            <strong>Error!</strong> @msg
                        </div>
                    }
                }
            }
        </div>
    </div>



    <div class="row">
        <div class="col-lg-12">
            <div class="card card-outline-info">
                <div class="card-body">
                    <form action="/Master/ProductMaster" method="post" onsubmit="return validateForm()">
                        <div class="form-body">

                            <div class="row p-t-20">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Select Brand<span class="text-danger">*</span>
                                        </label>
                                        @Html.DropDownListFor(Model => Model.FK_BrandId, new SelectList(ViewBag.bindBrand, "Value", "Text"), "-Select Brand-", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FK_BrandId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Select Unit<span class="text-danger">*</span>
                                        </label>
                                        @Html.DropDownListFor(Model => Model.FK_UnitID, new SelectList(ViewBag.bindUnit, "Value", "Text"), "-Select Unit-", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FK_UnitID, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Select Category<span class="text-danger">*</span>
                                        </label>
                                        @Html.DropDownListFor(Model => Model.FK_CategoryID, new SelectList(ViewBag.bindCategory, "Value", "Text"), "-Select Category-", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.FK_CategoryID, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Code<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.ProductCode, new { @class = "form-control", @placeholder = "Enter Product Code" })
                                        @Html.ValidationMessageFor(m => m.ProductCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Name<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.ProductName, new { @class = "form-control", @placeholder = "Enter Product Name", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.ProductName, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.ID)

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Product Image</label>
                                        <input class="form-control" onchange="UploadFile(this,'ProductImage')" type="file" id="File" />
                                        @Html.HiddenFor(Model => Model.ProductImage, new { @class = "form-control" })

                                        @if (Model.ProductImage != null)
                                        {

                                            <img class="inline-block" src="@Model.ProductImage" target="blank" id="imgProductImage" alt="user" style="height:50px">
                                        }
                                        else
                                        {
                                            <div class="d-none" id="d1">
                                                <img class="inline-block" src="" target="blank" id="imgProductImage" alt="user" style="height:50px">
                                            </div>
                                        }
                                        <div class="d-none" id="d2">
                                            <div class="col-md-4" id="image"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Description<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.Description, new { @class = "form-control", @placeholder = "Enter Product Description" })
                                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Meta Title<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.MetaTitle, new { @class = "form-control", @placeholder = "Enter Product Meta Title" })
                                        @Html.ValidationMessageFor(m => m.MetaTitle, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Meta Keyword<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.MetaKeyword, new { @class = "form-control", @placeholder = "Enter Product Meta Keyword" })
                                        @Html.ValidationMessageFor(m => m.MetaKeyword, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Meta Description<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.MetaDescription, new { @class = "form-control", @placeholder = "Enter Product Meta Description" })
                                        @Html.ValidationMessageFor(m => m.MetaDescription, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                @*<div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product FAQs<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.FAQs, new { @class = "form-control", @placeholder = "Enter Product FAQs" })
                                        @Html.ValidationMessageFor(m => m.FAQs, "", new { @class = "text-danger" })

                                    </div>
                                </div>*@
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Minimum Quantity<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.MinimumQuantity, new { @class = "form-control", @placeholder = "Enter Product Minimum Quantity" })
                                        @Html.ValidationMessageFor(m => m.MinimumQuantity, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Product Feature<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.ProductFeature, new { @class = "form-control", @placeholder = "Enter Product Product Feature" })
                                        @Html.ValidationMessageFor(m => m.ProductFeature, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product HSN Code<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.HSNCode, new { @class = "form-control", @placeholder = "Enter Product HSN Code", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.HSNCode, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product MRP<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.MRP, new { @class = "form-control", @placeholder = "Enter Product MRP", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.MRP, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product Sale Price<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.SalePrice, new { @class = "form-control", @placeholder = "Enter Product Sale Price", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.SalePrice, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product CGST<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.CGST, new { @class = "form-control", @placeholder = "Enter Product CGST", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.CGST, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product SGST<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.SGST, new { @class = "form-control", @placeholder = "Enter Product SGST", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.SGST, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product IGST<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.IGST, new { @class = "form-control", @placeholder = "Enter Product IGST", @maxlength = "100" })
                                        @Html.ValidationMessageFor(m => m.IGST, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                @*<div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product BV<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.BV, new { @class = "form-control", @placeholder = "Enter Product BV" })
                                        @Html.ValidationMessageFor(m => m.BV, "", new { @class = "text-danger" })

                                    </div>
                                </div>*@
                                @*<div class="col-md-4">
                                    <div class="form-group">
                                        <label class="control-label">
                                            Product PV<span class="text-danger">*</span>
                                        </label>
                                        @Html.TextBoxFor(Model => Model.PV, new { @class = "form-control", @placeholder = "Enter Product PV" })
                                        @Html.ValidationMessageFor(m => m.PV, "", new { @class = "text-danger" })

                                    </div>
                                </div>*@
                            </div>
                        </div>
                        <div class="form-actions">
                            @if (Model.ID > 0)
                            {
                                <button class="btn btn-success hstheme-button-o text-white">
                                    <i class="fa fa-check"></i>
                                    Update
                                </button>
                            }
                            else
                            {
                                <button class="btn btn-success hstheme-button-o text-white">
                                    <i class="fa fa-check"></i>
                                    Submit
                                </button>
                            }

                            <a href="/Master/ProductList" class="btn btn-danger hstheme-button-o text-white">
                                <i class="fa fa-crosshairs"></i>
                                Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>

        </div>
    </div>
</div>
<script>
    function validateForm() {
        if ($('#FK_BrandId').val() == '' || $('#FK_BrandId').val() == '0' || $('#FK_BrandId').val() == undefined) {
            swal("", "Please Select Brand..", "warning");
            $('#FK_BrandId').focus();
            return false;
        }
        if ($('#FK_UnitID').val() == '' || $('#FK_UnitID').val() == '0' || $('#FK_UnitID').val() == undefined) {
            swal("", "Please select Unit..", "warning");
            $('#FK_UnitID').focus();
            return false;
        }
        if ($('#FK_CategoryID').val() == '' || $('#FK_CategoryID').val() == '0' || $('#FK_CategoryID').val() == undefined) {
            swal("", "Please Select Category..", "warning");
            $('#FK_CategoryID').focus();
            return false;
        }
        if ($('#ProductCode').val() == '' || $('#ProductCode').val() == '0') {
            swal("", "Please Enter Product Code..", "warning");
            $('#ProductCode').focus();
            return false;
        }
        if ($('#ProductName').val() == '' || $('#ProductName').val() == '0') {
            swal("", "Please Enter Product Name..", "warning");
            $('#ProductName').focus();
            return false;
        }
        if ($('#ProductImage').val() == '' || $('#ProductImage').val() == '0' || $('#ProductImage').val() == undefined) {
            swal("", "Please Choose Product Image..", "warning");
            $('#ProductImage').focus();
            return false;
        }
        if ($('#Description').val() == '' || $('#Description').val() == '0') {
            swal("", "Please Enter Description..", "warning");
            $('#Description').focus();
            return false;
        }
        if ($('#MetaTitle').val() == '' || $('#MetaTitle').val() == '0') {
            swal("", "Please Enter MetaTitle..", "warning");
            $('#MetaTitle').focus();
            return false;
        }
        if ($('#MetaKeyword').val() == '' || $('#MetaKeyword').val() == '0') {
            swal("", "Please Enter Meta Keyword..", "warning");
            $('#MetaKeyword').focus();
            return false;
        }
        if ($('#MetaDescription').val() == '' || $('#MetaDescription').val() == '0') {
            swal("", "Please Enter Meta Description..", "warning");
            $('#MetaDescription').focus();
            return false;
        }
        if ($('#MinimumQuantity').val() == '' || $('#MinimumQuantity').val() == undefined) {
            swal("", "Please Enter Minimum Quantity..", "warning");
            $('#ProductName').focus();
            return false;
        }
        if ($('#MinimumQuantity').val() == '0') {
            swal("", "Minimum Quantity Should be Greater Than 0..", "warning");
            $('#MinimumQuantity').focus();
            return false;
        }
        if ($('#ProductFeature').val() == '' || $('#ProductFeature').val() == '0') {
            swal("", "Please Enter Product Feature..", "warning");
            $('#ProductFeature').focus();
            return false;
        }
        if ($('#HSNCode').val() == '' || $('#HSNCode').val() == '0') {
            swal("", "Please Enter Product HSN Code..", "warning");
            $('#HSNCode').focus();
            return false;
        }
        if ($('#MRP').val() == '' || $('#MRP').val() == '0.00' || $('#MRP').val() == '0') {
            swal("", "Please Enter Product MRP..", "warning");
            $('#MRP').focus();
            return false;
        }
        if ($('#SalePrice').val() == '' || $('#SalePrice').val() == '0' || $('#SalePrice').val() == '0.00') {
            swal("", "Please Enter Product SalePrice..", "warning");
            $('#SalePrice').focus();
            return false;
        }
        if ($('#CGST').val() == '' || $('#CGST').val() == '0') {
            swal("", "Please Enter Product CGST..", "warning");
            $('#CGST').focus();
            return false;
        }
        if ($('#SGST').val() == '' || $('#SGST').val() == '0') {
            swal("", "Please Enter Product SGST..", "warning");
            $('#SGST').focus();
            return false;
        }
        if ($('#IGST').val() == '' || $('#IGST').val() == '0') {
            swal("", "Please Enter Product IGST..", "warning");
            $('#IGST').focus();
            return false;
        }
        else {
            return true;
        }
    }

     function UploadFile(obj, type) {
        debugger;
        var filename = $(obj)[0].files[0].name;
        var fileId = $(obj).attr("id");
         var ext = obj.value.match(/\.(.+)$/)[1];


        switch (ext) {
            case 'jpg':
            case 'jpeg':
            case 'png':
            case 'pdf':
                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
                var data = new FormData();
                var files = $("#" + fileId).get(0).files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                }
                data.append("type", type);
                $("#divLoader").show();
                $.ajax({
                    url: '@Url.Action("UploadImageFile", "Master")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        $("#divLoader").hide();

                        if (response != null) {
                            if (response.result) {
                                var result = response.fpath;

                                if (ext == "jpg" || ext == "jpeg" || ext == "png")
                    {
                          $('#d1').removeClass('d-none');
                          $('#d2').addClass('d-none');
                    }
                    else
                    {
                       $('#d2').removeClass('d-none');
                       $('#d1').addClass('d-none');
                                     $('#image').html(' <a href="'+result+'" target="_blank" class="btn btn-warning"><i class="fa fa-download"></i></a>');
                    }
                                $("#" + type + "").val(response.fpath);

                                if ($("#" + type + "").val() != '') {

                                    $("#img" + type + "").attr("src", response.fpath);
                                }
                                swal("", "File upload successfully. ", "success")
                            }
                            else {
                                $("#" + type + "").val('');
                                swal("", response.mesg, "error")
                            }
                        }
                        else {
                            swal("", "Fail to Upload File", "error")
                        }
                        return false;

                    },
                    error: function (e) {

                        $("#divLoader").hide();
                        swal("", "An Error Occured while uploading file", "error");
                    }
                });

                /*}*/
                break;
            default:
                swal("", 'File should be in PNG/JPG/JPEG/pdf format./फाइल PNG/JPG/JPEG/pdf प्रारूप में होनी चाहिए।', "warning");
                this.value = '';
                return false;
        }

    }

</script>



