@model HRPayroll.Models.fixallowance
@{
    ViewBag.Title = "fixallowance";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

    <div class="container-fluid">
        <div class="page-wrapper">
            <div class="row page-titles">
                <div class="col-md-12 align-self-center">
                    <h3 class="text-themecolor font-20 clearfix">Add Fix Allowances</h3>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    @{
                        string Code = (string)TempData["code"];
                        string msg = (string)TempData["Msg"];
                        if (!string.IsNullOrEmpty(Code))
                        {
                            if (Code == "1")
                            {
                                <div class="alert alert-success msgdiv">
                                    <strong>Success!</strong> @msg
                                </div>
                                <script type="text/javascript">
                                    window.setTimeout(function () {
                                        location.href = '/Master/fixallowance';
                                    }, 3000);

/**/</script>
                            }
                            else
                            {
                                <div class="alert alert-danger msgdiv">
                                    <strong>Error!</strong> @msg
                                </div>
                            }
                        }
                    }
                </div>
            </div>
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="card card-outline-info">
                            <div class="card-header">
                                <h4 class="m-b-0 text-white">
                                    Fix Allowances
                                </h4>
                            </div>
                            <div class="card-body">
                                <form action="/Master/Add_fixallowance" method="post" id="FormSubmit" onsubmit="return ValidateForm();">
                                    <div class="form-body">

                                        <div class="row p-t-20">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        Select Grade Pay<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.DropDownListFor(model => model.GradepayId, new SelectList(ViewBag.GradePay, "Value", "Text"), "-- Select --", new { @class = "form-control" })

                                                    @Html.ValidationMessageFor(m => m.GradepayId, "", new { @class = "text-danger" })
                                                    @Html.HiddenFor(Model => Model.ID)
                                                </div>
                                            </div>
                                            <!--/span-->
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        Select Pay Comission<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.DropDownListFor(model => model.PayComId, new SelectList(ViewBag.Paycommission, "Value", "Text"), "-- Select --", new { @class = "form-control" })

                                                    @Html.ValidationMessageFor(m => m.PayComId, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">

                                                        Select Circle<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.DropDownListFor(model => model.CircleId, new SelectList(ViewBag.Circle, "Value", "Text"), "-- Select --", new { @class = "form-control" })

                                                    @Html.ValidationMessageFor(m => m.CircleId, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                        </div>

                                        <div class="row p-t-20">
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">
                                                        MA<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(M => M.MA, new { @class = "form-control", @placeholder = "Enter MA", @onkeypress = "return isNumberKey(event)" })
                                                    @Html.ValidationMessageFor(m => m.MA, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <!--/span-->
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">

                                                        WA<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(M => M.WA, new { @class = "form-control", @placeholder = "Enter WA", @onkeypress = "return isNumberKey(event)" })
                                                    @Html.ValidationMessageFor(m => m.WA, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">

                                                        HRA<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(M => M.HRA, new { @class = "form-control", @placeholder = "Enter HRA", @onkeypress = "return isNumberKey(event)" })
                                                    @Html.ValidationMessageFor(m => m.HRA, "", new { @class = "text-danger" })

                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group">
                                                    <label class="control-label">

                                                        Effective From Date<span class="text-danger">*</span>
                                                    </label>
                                                    @Html.TextBoxFor(M => M.EffectivFromDate, new { @class = "form-control", @type = "Date" })
                                                    @Html.ValidationMessageFor(m => m.EffectivFromDate, "", new { @class = "text-danger" })

                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="form-actions">
                                        @if (Model.ID > 0)
                                        {
                                            <button class="btn btn-success hstheme-button-o text-white">
                                                <i class="fa fa-check"></i>
                                                Update
                                            </button>
                                        }
                                        else
                                        {
                                            <button class="btn btn-success hstheme-button-o text-white">
                                                <i class="fa fa-check"></i>
                                                Submit
                                            </button>
                                        }

                                        <a href="/Master/fixallowanceList" class="btn btn-danger hstheme-button-o text-white">
                                            <i class="fa fa-crosshairs"></i>
                                            Cancel
                                        </a>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                </div>



            </div>
        </div>
    </div>

<script>

    function ValidateForm() {
        debugger;
        if ($('#GradepayId').val() == '' || $('#GradepayId').val() == '0') {
            swal("", "Please Select Grade Pay..", "warning");
            $('#GradepayId').focus();
            return false;

        }
        if ($('#PayComId').val() == '' || $('#PayComId').val() == '0') {
            swal("", "Please Select Pay Comission..", "warning");
            $('#PayComId').focus();
            return false;

        }
        if ($('#CircleId').val() == '' || $('#CircleId').val() == '0') {
            swal("", "Please Select Circle..", "warning");
            $('#CircleId').focus();
            return false;

        }
        if ($('#MA').val() == ''  || $('#MA').val() == null) {
            swal("", "Please Enter MA..", "warning");
            $('#MA').focus();
            return false;
        }
        if ($('#WA').val() == ''  || $('#WA').val() == null) {
            swal("", "Please Enter WA ..", "warning");
            $('#WA').focus();
            return false;
        }
        if ($('#HRA').val() == ''  || $('#HRA').val() == null) {
            swal("", "Please Enter HRA ..", "warning");
            $('#HRA').focus();
            return false;
        }
        if ($('#EffectivFromDate').val() == '' || $('#EffectivFromDate').val() == '0' || $('#EffectivFromDate').val() == null) {
            swal("", "Please Enter Date ..", "warning");
            $('#EffectivFromDate').focus();
            return false;
        }
        else {
            return true;
            $("#FormSubmit").submit();
        }
    }
        function checkpercent() {
            debugger;
            var da = $("#DA_Percent").val();

            if (parseFloat(da) > 100) {
                swal("", "DA Percent More Than 100..", "warning");
                $('#DA_Percent').val('');
            }
        }

        function isNumberKey(evt) {
            debugger
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31
                && (charCode < 48 || charCode > 57))
                return false;

            return true;
       

    }
</script>


