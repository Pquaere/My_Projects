@model HRPayroll.Models.PayComission
@{
    ViewBag.Title = "AddPayComission";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
    <div class="container-fluid">
        <div class="page-wrapper">
            <div class="row page-titles">
                <div class="col-md-12 align-self-center">
                    <h3 class="text-themecolor font-20 clearfix">Add PayComission</h3>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @{
                        string Code = (string)TempData["code"];
                        string msg = (string)TempData["Msg"];
                        if (!string.IsNullOrEmpty(Code))
                        {
                            if (Code == "1")
                            {
                                <div class="alert alert-success msgdiv">
                                    <strong>Success!</strong> @msg
                                </div>
                                <script type="text/javascript">
                                    window.setTimeout(function () {
                                        location.href = '/Master/AddPayComission';
                                    }, 3000);

/**/</script>
                            }
                            else
                            {
                                <div class="alert alert-danger msgdiv">
                                    <strong>Error!</strong> @msg
                                </div>
                            }
                        }
                    }
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    <div class="card card-outline-info">
                        <div class="card-body">
                            <form action="/Master/AddPayComission" method="post" id="FormSubmit" onsubmit="return ValidateForm();">
                                <div class="form-body">

                                    <div class="row p-t-20">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    Select Grade Pay Level<span class="text-danger">*</span>
                                                </label>
                                                @Html.DropDownListFor(model => model.LevelId, new SelectList(ViewBag.Level, "Value", "Text"), "-Select Level-", new { @class = "form-control" })
                                                @Html.HiddenFor(model => model.ID)

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    Grade Pay<span class="text-danger">*</span>
                                                </label>
                                                @Html.TextBoxFor(M => M.GradePay, new { @class = "form-control", @placeholder = "Enter Grade Pay", @maxlength = "50" })
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    PayComission Title<span class="text-danger">*</span>
                                                </label>
                                                @Html.TextBoxFor(M => M.PayComissionName, new { @class = "form-control", @placeholder = "Enter Pay comission", @maxlength = "50", @onkeypress = " return blockSpecialChar(event)" })
                                                @Html.ValidationMessageFor(m => m.PayComissionName, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    Increment<span class="text-danger">*</span>
                                                </label>
                                                @Html.TextBoxFor(M => M.Increment, new { @class = "form-control", @placeholder = "Enter Increment", @maxlength = "50" })
                                                @Html.ValidationMessageFor(m => m.Increment, "", new { @class = "text-danger" })

                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="control-label">
                                                    Basic<span class="text-danger">*</span>
                                                </label>
                                                @Html.TextBoxFor(M => M.Basic, new { @class = "form-control", @placeholder = "Enter Basic", @maxlength = "50", @onkeypress = "return isNumber(event)" })
                                                @Html.ValidationMessageFor(m => m.Basic, "", new { @class = "text-danger" })

                                            </div>
                                        </div>

                                    </div>
                                </div>
                                <div class="form-actions">
                                    @if (Model.ID > 0)
                                    {
                                        <button class="btn btn-success hstheme-button-o text-white">
                                            <i class="fa fa-check"></i>
                                            Update
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-success hstheme-button-o text-white">
                                            <i class="fa fa-check"></i>
                                            Submit
                                        </button>
                                    }

                                    <a href="/Master/PayComissionList" class="btn btn-danger hstheme-button-o text-white">
                                        <i class="fa fa-crosshairs"></i>
                                        Cancel
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            </div>



        </div>
    </div>

<script>

    function ValidateForm() {
        debugger;
        if ($('#LevelId').val() == '' || $('#LevelId').val() == '0' || $('#LevelId').val() == null) {
            swal("", "Please Select Pay Comission Level..", "warning");
            $('#LevelId').focus();
            return false;
        }
        if ($('#GradePay').val() == '' || $('#GradePay').val() == '0' || $('#GradePay').val() == null) {
            swal("", "Please Enter GradePay..", "warning");
            $('#GradePay').focus();
            return false;
        }
        if ($('#PayComissionName').val() == '' || $('#PayComissionName').val() == '0' || $('#PayComissionName').val() == null) {
            swal("", "Please Enter PayComission Name..", "warning");
            $('#PayComissionName').focus();
            return false;
        }
        if ($('#Increment').val() == '' || $('#Increment').val() == '0' || $('#Increment').val() == null) {
            swal("", "Please Enter Increment..", "warning");
            $('#Increment').focus();
            return false;
        }
        if ($('#Basic').val() == '' || $('#Basic').val() == '0' || $('#Basic').val() == null) {
            swal("", "Please Enter Basic..", "warning");
            $('#Basic').focus();
            return false;
        }
        else {
            return true;
            $("#FormSubmit").submit();
        }
    }

    function blockSpecialChar(e) {
        debugger;
        var k;
        document.all ? k = e.keyCode : k = e.which;
        return ((k > 64 && k < 91) || (k > 96 && k < 123)||(k > 47 && k < 58) || k == 8 || k == 32 || k == 46);
    }
    function isNumber(evt) {
        debugger;
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode!=46 ) {
            return false;
        }
        return true;
    }
</script>

