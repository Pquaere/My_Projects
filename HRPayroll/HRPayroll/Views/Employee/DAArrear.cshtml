@model HRPayroll.Models.DAArrear
@{
    ViewBag.Title = "DAArrear";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}


<div class="container-fluid">
    <div class="page-wrapper">
        <div class="card">
            <div class="card-bod1" style="padding: 8px; background: #e7e7e7;">
                <div class="block-header py-lg-4 py-3">
                    <div class="row page-titles">
                        <div class="col-md-12 align-self-center">
                            <h3 class="text-themecolor font-20 clearfix" style="text-align:center">DA Arrear</h3>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        @{
                            string Code = (string)TempData["code"];
                            string msg = (string)TempData["Msg"];
                            if (!string.IsNullOrEmpty(Code))
                            {
                                if (Code == "1")
                                {
                                    <div class="alert alert-success msgdiv">
                                        <strong>Success!</strong> @msg
                                    </div>
                                    <script type="text/javascript">
                                        window.setTimeout(function () {
                                            location.href = '/Employee/DAArrear';
                                        }, 5000);
                                    </script>
                                }
                                else
                                {
                                    <div class="alert alert-danger msgdiv">
                                        <strong>Error!</strong> @msg
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
                <form method="post" id="form" action="/Employee/DAArrear" onsubmit="return ValidateForm()">
                    <div class="container-fluid">
                        <div class="row mb-3">
                            <div class="col-lg-12">
                                <div class="card card-outline-info">
                                    <div class="card-body">

                                        <h5>Search</h5>
                                        <div class="form-body">
                                            <div class="row p-t-20">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">District</label>
                                                        @Html.DropDownListFor(model => model.District, new SelectList(ViewBag.ddlDistrict, "Value", "Text"), "-Select District-", new { @class = "form-control", @disabled = true })
                                                        @Html.HiddenFor(model => model.Id)
                                                        @Html.HiddenFor(model => model.District)
                                                        @Html.ValidationMessageFor(m => m.District, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Office Type</label>
                                                        @Html.DropDownListFor(model => model.ULBType, new SelectList(ViewBag.Agency, "Value", "Text"), new { @class = "form-control", @disabled = true })
                                                        @Html.HiddenFor(model => model.ULBType)
                                                        @Html.ValidationMessageFor(m => m.ULBType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Office Name</label>                                                       @Html.DropDownListFor(model => model.ULBName, new SelectList(ViewBag.Office, "Value", "Text"), "-Select Office-", new { @class = "form-control", @disabled = true })
                                                        @Html.HiddenFor(model => model.ULBName)
                                                        @Html.ValidationMessageFor(m => m.ULBName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row p-t-20">
                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label class="form-label">From Month</label><br />

                                                        @Html.DropDownListFor(model => model.FromMonth, new SelectList(ViewBag.Month, "Value", "Text"), "-Select Month-", new { @class = "form-control" })
                                                        @Html.HiddenFor(model => model.FromMonth)
                                                        @Html.ValidationMessageFor(m => m.FromMonth, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label class="form-label">From Year</label>
                                                        <select class="form-control" id="FYear" name="FromYear">
                                                            <option value="">--select--</option>
                                                        </select>
                                                        @Html.HiddenFor(model => model.FromYear)
                                                        @Html.ValidationMessageFor(m => m.FromYear, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label class="form-label">To Month</label>
                                                        @Html.DropDownListFor(model => model.ToMonth, new SelectList(ViewBag.Month, "Value", "Text"), "-Select Month-", new { @class = "form-control" })
                                                        @Html.HiddenFor(model => model.ToMonth)
                                                        @Html.ValidationMessageFor(m => m.ToMonth, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-3">
                                                    <div class="form-group">
                                                        <label class="form-label">To Year</label>
                                                        <select class="form-control" id="TYear" name="ToYear">
                                                            <option value="">--select--</option>
                                                        </select>
                                                        @Html.HiddenFor(model => model.ToYear)
                                                        @Html.ValidationMessageFor(m => m.ToYear, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row p-t-20">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">WorkingType</label>
                                                        @Html.DropDownListFor(model => model.WorkingType, new SelectList(ViewBag.Type, "Value", "Text"), "-Select WorkingType-", new { @class = "form-control",@onchange = "GetEmployee()" })
                                                        @Html.HiddenFor(model => model.WorkingType)
                                                        @Html.ValidationMessageFor(m => m.WorkingType, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Department</label>
                                                        @Html.DropDownListFor(model => model.Department, new SelectList(ViewBag.Department, "Value", "Text"), "-Select Department-", new { @class = "form-control", @onchange = "GetSubDepartment();" })
                                                        @Html.HiddenFor(model => model.Department)
                                                        @Html.ValidationMessageFor(m => m.Department, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">SubDepartment</label>                                                      @Html.DropDownListFor(model => model.SubDepartment, new SelectList(String.Empty, "Value", "Text"), "-Select SubDepartment-", new { @class = "form-control", @onchange = "GetEmployee()" })
                                                        @Html.HiddenFor(model => model.SubDepartment)
                                                        @Html.ValidationMessageFor(m => m.SubDepartment, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row p-t-20">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Empployee Name</label>
                                                        @*@Html.DropDownListFor(model => model.EmployeeName, new SelectList(ViewBag.Type, "Value", "Text"), "-Select Type-", new { @class = "form-control" })
                                                            @Html.HiddenFor(model => model.EmployeeName)
                                                            @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })*@
                                                        @Html.DropDownListFor(model => model.EmployeeName, new SelectList(ViewBag.Employee, "Value", "Text"), "-Select Employee-", new { @class = "form-control" })
                                                        @Html.HiddenFor(model => model.EmployeeName)
                                                        @Html.ValidationMessageFor(m => m.EmployeeName, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Due DA</label>
                                                        @Html.TextBoxFor(model => model.DueDA, new { @class = "form-control" })
                                                        @Html.HiddenFor(model => model.DueDA)
                                                        @Html.ValidationMessageFor(m => m.DueDA, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>

                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <label class="form-label">Draw DA</label>                                                                            @Html.TextBoxFor(model => model.DrawDA, new { @class = "form-control" })
                                                        @Html.HiddenFor(model => model.DrawDA)
                                                        @Html.ValidationMessageFor(m => m.DrawDA, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <input type="submit" value="Show" class="btn btn-success" />
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </form>
            </div>
            @if (Model.List != null && Model.List.Count > 0)
            {
                <div class="row" id="EmpTable">
                    <div class="col-md-12">
                        <div class="card">
                            <div class="card-body">
                                <div class="table">
                                    <div class="table-responsive">
                                        <table class="table dataTable table-striped">
                                            <thead id="tbl">
                                                <tr role="row" class="bg-secondary">
                                                    <th>S.No</th>
                                                    <th>Select</th>
                                                    <th>PFMS Code</th>
                                                    <th>Employee Name</th>
                                                    <th>Father Name</th>
                                                    <th>Year</th>
                                                    <th>Month</th>
                                                    <th>Basic</th>
                                                    <th>Work Days</th>
                                                    <th>Draw DA</th>
                                                    <th>Due DA</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (Model != null && Model.List != null)
                                                {
                                                    if (Model.List.Count() > 0)
                                                    {
                                                        var Sn = 0;
                                                        foreach (var item in Model.List)
                                                        {
                                                            Sn = Sn + 1;
                                                            <tr role="row" class="odd">
                                                                <td>  @Sn</td>
                                                                <td>
                                                                    <div class="form-check">
                                                                        <input class="form-check-input" type="checkbox" checked="checked" id="flexCheckDefault_@Sn" value="@item.EMPid">
                                                                    </div>
                                                                </td>
                                                                <td> @item.PFMSCode </td>
                                                                <td>@item.EMPName</td>
                                                                <td> @item.FatherName </td>
                                                                <td> @item.Year </td>
                                                                <td> @item.Month </td>
                                                                <td> @item.BasicSal </td>
                                                                <td> @item.WorkDays </td>
                                                                <td> @item.DrawDA </td>
                                                                <td> @item.DueDA </td>
                                                            </tr>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <tr>
                                                            <td colspan="6"><span>No Data Available</span></td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">

                    </div>
                    <div class="col-md-3 d-inline" onclick="Action();">
                        <input type="button" class="form-control btn-success" value="Generate" />
                    </div>
                    <div class="col-md-3" onclick="cancel();">
                        <input type="button" class="form-control btn-danger" value="Cancel" />
                    </div>
                    <div class="col-md-3">

                    </div>
                </div>
            }

        </div>

    </div>
</div>

<script>
    function cancel() {
        debugger;
        location.reload();
        window.location.href = "/Employee/DAArrear";
    }
    $(document).ready(function () {


    })

    //function BindEmployee(id) {
    //    debugger;
    //    var SubDeptId = $('#SubDepartment').val();
    //    $.ajax({
    //        url: '/Employee/GetEmpSalDetail',
    //        type: 'post',
    //        data: { SubDeptId: SubDeptId},
    //        dataType: 'json',
    //        containtType: 'aplication/json;charset=utf-8',
    //        success: function (data) {
    //            if (data != null) {
    //                $('#EmployeeName').empty();
    //                $('#EmployeeName').append('<option>---Select----</option>');
    //                for (var i = 0; i < data.length; i++) {
    //                    $('#EmployeeName').append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
    //                }
    //            }
    //        },
    //        error: function (error) {
    //        }
    //    })
    //}
    function BindSubDepartment(id) {
        debugger;
        GetEmployee();
        var DepartmentId = $('#Department').val();
        $.ajax({
            url: '/Employee/GetSubDepartment',
            type: 'post',
            data: { DepartmentId: DepartmentId },
            dataType: 'json',
            containtType: 'aplication/json;charset=utf-8',
            success: function (data) {
                if (data != null) {
                    $('#Fk_SubDeptId').empty();
                    $('#Fk_SubDeptId').append('<option>---Select----</option>');
                    for (var i = 0; i < data.length; i++) {
                        $('#Fk_SubDeptId').append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }
                    if (id > 0) {
                        $("#Fk_SubDeptId").val(@Model.SubDepartment);
                    }
                }
            },
            error: function (error) {
            }
        })
    }

    function ValidateForm() {
        debugger;
        if ($('#FromMonth').val() == '' || $('#FromMonth').val() == '0' || $('#FromMonth').val() == null) {
            swal("", "Please Select From Month...", "warning");
            $('#FromMonth').focus();
            return false;
        }
        if ($('#FYear').val() == '' || $('#FYear').val() == null || $('#FYear').val() == '0') {
            swal("", "Please Select From Year...", "warning");
            $('#FYear').focus();
            return false;
        }
        if ($('#ToMonth').val() == '' || $('#ToMonth').val() == null || $('#ToMonth').val() == '0') {
            swal("", "Please Select To Month..", "warning");
            $('#ToMonth').focus();
            return false;
        }
        if ($('#TYear').val() == '' || $('#TYear').val() == null || $('#TYear').val() == '0') {
            swal("", "Please Select To Year..", "warning");
            $('#TYear').focus();
                return false;
        }
        if ($('#WorkingType').val() == '' || $('#WorkingType').val() == null || $('#WorkingType').val() == '0') {
            swal("", "Please select Working Type..", "warning");
            $('#WorkingType').focus();
            return false;
        }
        if ($('#Department').val() == '' || $('#Department').val() == null || $('#Department').val() == '0') {
            swal("", "Please Select Department.", "warning");
            $('#Department').focus();
            return false;
        }
        if ($('#SubDepartment').val() == '' || $('#SubDepartment').val() == null || $('#SubDepartment').val() == '0') {
            swal("", "Please Select Sub Department.", "warning");
            $('#SubDepartment').focus();
            return false;
        }
        if ($('#EmployeeName').val() == '' || $('#EmployeeName').val() == null || $('#EmployeeName').val() == '0') {
            swal("", "Please Select Employee Name.", "warning");
            $('#EmployeeName').focus();
            return false;
        }
        if ($('#DueDA').val() == '' || $('#DueDA').val() == null || $('#DueDA').val() == '0') {
            swal("", "Please Enter Due DA.", "warning");
            $('#DueDA').focus();
            return false;
        }
        if ($('#DrawDA').val() == '' || $('#DrawDA').val() == null || $('#DrawDA').val() == '0') {
            swal("", "Please Enter Draw DA.", "warning");
            $('#DrawDA').focus();
            return false;
        }
        else {
            return true;
            $("#form").submit();
        }
    }

     $(function () {
         var ddlYears = $("#FYear");

        var currentYear = (new Date()).getFullYear();

        for (var i = 2000; i <= currentYear; i++) {
            var option = $("<option />");
            option.html(i);
            option.val(i);
            ddlYears.append(option);
        }
     });
    $(function () {
        var ddltoYears = $("#TYear");

        var currentYear = (new Date()).getFullYear();

        for (var i = 2000; i <= currentYear; i++) {
            var option = $("<option />");
            option.html(i);
            option.val(i);
            ddltoYears.append(option);
        }
    });

    function GetSubDepartment(id) {
        debugger;
        var DepartmentId = $('#Department').val();
        if (DepartmentId > 0) {
            $.ajax({
                type: 'post',
                url: '/Employee/GetSubCategory',
                data: { DepartmentId: DepartmentId },
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $("#SubDepartment").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                        for (var i = 0; i < data.length; i++) {
                            $('#SubDepartment').append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>')
                        }

                    }
                    else {
                        $("#SubDepartment").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                    }
                    if (id > 0) {
                        $('#SubDepartment').val(id);
                    }
                },
                error: function (e) {
                    $("#SubDepartment").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                }

            })
        }
        else {
            $("#SubDepartment").children().remove().end().append($("<option></option>").val("").text("-Select-"));
        }
    }


    function GetEmployee(id) {
        debugger;

        var WTypeId = $('#WorkingType').val();
        var Fk_SubDeptId = $('#SubDepartment').val();
        var DepartmentId = $('#Department').val();
        if (DepartmentId > 0) {
            $.ajax({
                type: 'post',
                url: '/Employee/GetEmployeeDropdown',
                data: { WTypeId: WTypeId, DepartmentId: DepartmentId, Fk_SubDeptId: Fk_SubDeptId },
                dataType: 'json',
                success: function (data) {
                    if (data.length > 0) {
                        $("#EmployeeName").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                        for (var i = 0; i < data.length; i++) {
                            $('#EmployeeName').append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>')
                        }

                    }
                    else {
                        $("#EmployeeName").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                    }
                    if (id > 0) {
                        $('#EmployeeName').val(id);
                    }
                },
                error: function (e) {
                    $("#EmployeeName").children().remove().end().append($("<option></option>").val("").text("-Select-"));
                }

            })
        }
        else {
            $("#EmployeeName").children().remove().end().append($("<option></option>").val("").text("-Select-"));
        }
    }

    function Action() {
        debugger;
        //if ($("#AttendanceDate").val() == "") {
        //    swal("", "Please select attendance date", "warning");
        //    return false;
        //}
        var EmpList = [];
        $("tbody tr ").each(function () {
            var row = $(this);
            if (row.find("td:eq(1) input").val() != "") {
                EmpList.push({
                    "EMPid": row.find("td:eq(1) input ").val(),
                    "Month": row.find("td:eq(6) ").text(),
                    "Year": row.find("td:eq(5) ").text(),
                    "DrawDA": row.find("td:eq(9) ").text(),
                    "DueDA": row.find("td:eq(10) ").text(),
                    "WorkDays": row.find("td:eq(8) ").text(),
                    "BasicSal": row.find("td:eq(7) ").text(),
                });
            }
        })
        $.ajax({
            type: 'POST',
            data: JSON.stringify({ EmpIDList: EmpList }),
            contentType: 'application/json',
            url: '/Employee/GenerateDA',
            success: function (data) {
                debugger;
                if (data != null) {
                    swal("", "Added successfully", "success");
                    window.setTimeout(function () {
                        window.location.href = "/Employee/DAArrear";
                    }, 2000);
                }
                else {
                    swal("", "Some error occured", "error");
                    window.setTimeout(function () {
                        window.location.href = "/Employee/DAArrear";
                    }, 2000);
                }
                //if (response.flag == 1) {
                //    debugger;
                //    window.location.reload();
                //}
                //else {
                //    alert("Something went Wrong");
                //}
            },
        });
        console.log(EmpList);
    }
</script>




